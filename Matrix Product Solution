#include <iostream>

using namespace std;

int main()
{
	int n,m;  //n*m Matrix
	cin>>n>>m;
    int** mat;
    mat=new int*[n];
    for(int i=0;i<n;i++)
    	mat[i]=new int[m];

    for(int i=0;i<n;i++)
    	for(int j=0;j<m;j++)
    		cin>>mat[i][j];

    int **mnMat,**mxMat;

    mnMat=new int*[n];
    mxMat=new int*[n];
    
    for(int i=0;i<n;i++)
    	mnMat[i]=new int[m];

    for(int i=0;i<n;i++)
    	mxMat[i]=new int[m];
 
    for(int i=0;i<n;i++)
    {
    	for(int j=0;j<m;j++)
    	{
            if(i==0&&j==0)
            	mnMat[0][0]=mxMat[0][0]=mat[0][0];
    		else if(i==0)
    			mnMat[i][j]=mxMat[i][j]=mat[i][j]*mnMat[i][j-1];
    		else if(j==0)
    			mnMat[i][j]=mxMat[i][j]=mat[i][j]*mnMat[i-1][j];
    		else
    		{
    			if(mat[i][j]<0)
    			{
    				mnMat[i][j]=mat[i][j]*max(mxMat[i-1][j],mxMat[i][j-1]);
    				mxMat[i][j]=mat[i][j]*min(mnMat[i-1][j],mnMat[i][j-1]);
    			}
    			else
    			{
    				mnMat[i][j]=mat[i][j]*min(mnMat[i-1][j],mnMat[i][j-1]);
    				mxMat[i][j]=mat[i][j]*max(mxMat[i-1][j],mxMat[i][j-1]);
    			}
    		}
    	}
    }
    cout<<mxMat[n-1][m-1]<<endl;
}
